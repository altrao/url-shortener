services:
  cassandra:
    image: cassandra:5.0
    container_name: cassandra
    ports:
      - "9042:9042"
    volumes:
      - cassandra-data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 5s
      timeout: 10s
      retries: 30
      start_period: 30s

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:5.0
    depends_on:
      - cassandra
    volumes:
      - ./src/main/resources/docker/cassandra/init/01-create-keyspace.cql:/create-keyspace.cql
    command: /bin/bash -c "sleep 60 && echo loading cassandra keyspace && cqlsh cassandra -f /create-keyspace.cql && echo completed"

  redis:
    image: redis:6.2.6
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
    command: redis-server --appendonly yes

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/resources/docker/prometheus/prometheus.yml:/prometheus/prometheus.yml
      - prom_data:/prometheus
    command:
      - '--config.file=prometheus.yml'

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana

volumes:
  cassandra-data:
  redis-data:
  prom_data:
